#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT     0
#define NUMBERS     1
#define SYMBOLS     2
#define MEDIANAV    3
#define MACROS      4
#define WINMGMT     5
#define OPTIONS     6

#define MEH(code) LS(LA(LC(code)))

/ {
    chosen {
      zmk,matrix_transform = &five_column_transform;
    };

    macros {
        // Layer + F-key macros for signaling
        lf13: layer_f13 {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &mo MACRO_PLACEHOLDER>
                , <&macro_press &kp F13>
                , <&macro_pause_for_release>
                , <&macro_release &kp F13>
                , <&macro_param_1to1>
                , <&macro_release &mo MACRO_PLACEHOLDER>
                ;
        };
        
        lf14: layer_f14 {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &mo MACRO_PLACEHOLDER>
                , <&macro_press &kp F14>
                , <&macro_pause_for_release>
                , <&macro_release &kp F14>
                , <&macro_param_1to1>
                , <&macro_release &mo MACRO_PLACEHOLDER>
                ;
        };
        
        lf15: layer_f15 {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &mo MACRO_PLACEHOLDER>
                , <&macro_press &kp F15>
                , <&macro_pause_for_release>
                , <&macro_release &kp F15>
                , <&macro_param_1to1>
                , <&macro_release &mo MACRO_PLACEHOLDER>
                ;
        };
        
        lf16: layer_f16 {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &mo MACRO_PLACEHOLDER>
                , <&macro_press &kp F16>
                , <&macro_pause_for_release>
                , <&macro_release &kp F16>
                , <&macro_param_1to1>
                , <&macro_release &mo MACRO_PLACEHOLDER>
                ;
        };
        
        lf17: layer_f17 {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &mo MACRO_PLACEHOLDER>
                , <&macro_press &kp F17>
                , <&macro_pause_for_release>
                , <&macro_release &kp F17>
                , <&macro_param_1to1>
                , <&macro_release &mo MACRO_PLACEHOLDER>
                ;
        };
        
        lf18: layer_f18 {
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &mo MACRO_PLACEHOLDER>
                , <&macro_press &kp F18>
                , <&macro_pause_for_release>
                , <&macro_release &kp F18>
                , <&macro_param_1to1>
                , <&macro_release &mo MACRO_PLACEHOLDER>
                ;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        
        // Custom hold-tap for layer switching with F-key signaling
        lt_signal: layer_tap_signal {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;  // For simple layer switching without F-key
        };
        
        // Hold-tap that uses the layer+F-key macros
        lt_f13: layer_tap_f13 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&lf13>, <&kp>;
        };
        
        lt_f14: layer_tap_f14 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&lf14>, <&kp>;
        };
        
        lt_f15: layer_tap_f15 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&lf15>, <&kp>;
        };
        
        lt_f16: layer_tap_f16 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&lf16>, <&kp>;
        };
        
        lt_f17: layer_tap_f17 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&lf17>, <&kp>;
        };
        
        lt_f18: layer_tap_f18 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&lf18>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Home";
            bindings = <
// ------------------------------------------------------------------------------------------------------------------------------------
// |     Q     |     W     |     E     |     R     |     T     |          |     Y     |     U     |     I     |     O     |     P     |
       &kp Q       &kp W       &kp E       &kp R       &kp T                  &kp Y       &kp U       &kp I       &kp O       &kp P
// |   A(GUI)  |   S(ALT)  |  D(CTRL)  |  F(SHFT)  |     G     |          |     H     |  J(SHFT)  |  K(CTRL)  |   L(ALT)  |   ;(GUI)  |
    &hm LGUI A  &hm LALT S  &hm LCTRL D &hm LSHIFT F   &kp G                  &kp H   &hm LSHIFT J &hm LCTRL K  &hm LALT L &hm LGUI COLON
// |     Z     |     X     |     C     |     V     |     B     |          |     N     |     M     |     ,     |     .     |     ?     |
       &kp Z       &kp X       &kp C       &kp V       &kp B                  &kp N       &kp M      &kp COMMA    &kp DOT   &kp QMARK
// |     ESC(WM)     |     TAB(Symb)    |      SPC(Num)        |          |     ENT(Media/Nav)   |    BKSP    |      DEL(MACROS)       |
  &lt_f17 WINMGMT ESC  &lt_f14 SYMBOLS TAB  &lt_f13 NUMBERS SPACE        &lt_f15 MEDIANAV RET    &kp BSPC     &lt_f16 MACROS DEL
// ------------------------------------------------------------------------------------------------------------------------------------
            >;
        };

        numbers_layer {
            display-name = "Numbers";
            bindings = <
// ------------------------------------------------------------------------------------------------------------------------------------
// |     6     |     7     |     8     |     9     |     0     |          |           |           |           |           |           |
      &kp N6      &kp N7      &kp N8      &kp N9      &kp N0                  &none       &none       &none       &none       &none
// |     1     |     2     |     3     |     4     |     5     |          |     6     |     7     |     8     |     9     |     0     |
       &kp N1     &kp N2      &kp N3      &kp N4      &kp N5                  &kp N6      &kp N7      &kp N8      &kp N9     &kp N0
// |           |           |           |           |           |          |           |           |           |           |           |
       &none       &none       &none       &none       &none                  &none       &none       &none       &none       &none
//                         | Tog Layer |           |||||||||||||          |           |           |           |
                            &tog NUMBERS   &none       &trans                 &none       &none       &none
// ------------------------------------------------------------------------------------------------------------------------------------
            >;
        };

        symbols_layer {
            display-name = "Symbols";
            bindings = <
// ------------------------------------------------------------------------------------------------------------------------------------
// |     !     |     @     |    /#     |     $     |     %     |          |     ^     |     &     |     *     |     (     |     )     |
     &kp EXCL     &kp AT     &kp HASH     &kp DLLR   &kp PRCNT              &kp CARET    &kp AMPS   &kp STAR    &kp LPAR    &kp RPAR
// |     `     |     /     |     {     |     (     |     [     |          |     ]     |     )     |     }     |     \     |     '     |
     &kp GRAVE   &kp FSLH    &kp LBRC     &kp LPAR   &kp LBKT               &kp RBKT     &kp RPAR   &kp RBRC    &kp BSLH    &kp PIPE
// |     ~     |     <     |     +     |     =     |     :     |          |     ;     |     _     |     -     |     >     |     ?     |
     &kp TILDE    &kp LT     &kp PLUS    &kp EQUAL   &kp COLON              &kp SEMI    &kp UNDER   &kp MINUS    &kp GT     &kp QMARK
//                         |           |||||||||||||           |          |           |           |           |
                               &none       &trans       &none                  &none      &none       &none
// ------------------------------------------------------------------------------------------------------------------------------------
            >;
        };

        media_layer {
            display-name = "Media/Nav";
            bindings = <
// ------------------------------------------------------------------------------------------------------------------------------------
// |           |  VOL DWN  |   MUTE    |   VOL UP  |           |          |           |  PG DWN   |   PG UP   |           |           |
       &none    &kp C_VOL_DN  &kp C_MUTE &kp C_VOL_UP   &none                  &none     &kp PG_DN   &kp PG_UP     &none       &none
// |           |   PREV    | PLY/PAUSE |   NEXT    |           |          |   LEFT    |   DOWN    |    UP     |   RIGHT   |           |
       &none    &kp C_PREV   &kp C_PP    &kp C_NEXT    &none                &kp LEFT    &kp DOWN     &kp UP     &kp RIGHT     &none
// |           |  [S] PREV |[S] PLY/PSE| [S] NEXT  |           |          |           |   Home    |    End    |           |           |
       &none &kp LS(C_PREV) &kp LS(C_PP) &kp LS(C_NEXT)  &none                &none     &kp HOME     &kp END      &none       &none
//                         |           |           |           |          |||||||||||||           |           |
                               &none       &none      &none                  &trans       &none       &none
// ------------------------------------------------------------------------------------------------------------------------------------
            >;
        };

        macros_layer {
            display-name = "Macros";
            bindings = <
// ------------------------------------------------------------------------------------------------------------------------------------
// |  Hyper Q  |  Hyper W  |  Hyper E  |  Hyper R  |  Hyper T  |          |  Hyper Y  |  Hyper U  |  Hyper I  |  Hyper O  |  Hyper p  |
     &kp MEH(Q)  &kp MEH(W)  &kp MEH(E)  &kp MEH(R)  &kp MEH(T)             &kp MEH(Y)  &kp MEH(U)  &kp MEH(I)  &kp MEH(O)  &kp MEH(P)
// |  Hyper A  |  Hyper S  |  Hyper D  |  Hyper F  |  Hyper G  |          |  Hyper H  |  Hyper J  |  Hyper K  |  Hyper L  |  Hyper ;  |
     &kp MEH(A)  &kp MEH(S)  &kp MEH(D)  &kp MEH(F)  &kp MEH(G)             &kp MEH(H)  &kp MEH(J)  &kp MEH(K)  &kp MEH(L)  &kp MEH(COLON)
// |  Hyper Z  |  Hyper X  |  Hyper C  |  Hyper V  |  Hyper B  |          |  Hyper N  |  Hyper M  |  Hyper ,  |  Hyper .  |  Hyper '  |
     &kp MEH(Z)  &kp MEH(X)  &kp MEH(C)  &kp MEH(V)  &kp MEH(B)             &kp MEH(N)  &kp MEH(M) &kp MEH(COMMA) &kp MEH(DOT) &kp MEH(SQT)
//                         |  OPTIONS  |           |    GUI    |          |           |           |||||||||||||
                          &mo OPTIONS     &none     &kp LGUI                 &none       &none      &trans
// ------------------------------------------------------------------------------------------------------------------------------------
            >;
        };

        winmgmt_layer {
            display-name = "Win Mgt";
            bindings = <
// ------------------------------------------------------------------------------------------------------------------------------------
// |   DIS 6   |   DIS 7   |   DIS 8   |   DIS 9   |   DIS 10  |          |           | DIS FOC P | DIS FOC N |           |           |
    &kp LA(N6)  &kp LA(N7)  &kp LA(N8)  &kp LA(N9)  &kp LA(N0)                &none     &kp LA(S)   &kp LA(G)     &none       &none
// |   DIS 1   |   DIS 2   |   DIS 3   |   DIS 4   |   DIS 5   |          | WIN FOC L | WIN FOC D | WIN FOC U | WIN FOC R |           |
    &kp LA(N1)  &kp LA(N2)  &kp LA(N3)  &kp LA(N4)  &kp LA(N5)              &kp LA(H)   &kp LA(J)   &kp LA(K)   &kp LA(L)     &none
// |   Reset   |  StatBar  | Fullscreen|   Mode    |  Restart  |          | ROT WINS  | SWP WIN P | SWP WIN N |   FLIP X  |   FLIP Y  |
  &kp LS(LA(E)) &kp LG(LA(S)) &kp LS(LA(F)) &kp LS(LA(M)) &kp LC(LA(R))   &kp LS(LA(M)) &kp LA(J)   &kp LA(K) &kp LS(LA(X)) &kp LS(LA(Y))
//                         |||||||||||||           |           |          |   SHIFT   |   CONTRL  |           |
                               &trans      &none       &none                &kp LSHIFT  &kp LCTRL     &none
// ------------------------------------------------------------------------------------------------------------------------------------
            >;
        };

        options_layer {
            display-name = "Options";
            bindings = <
// ------------------------------------------------------------------------------------------------------------------------------------
// |           |           |           |           |           |          |           |           |           |           |           |
       &none       &none       &none       &none       &none                  &none       &none       &none       &none       &none
// |    BT1    |    BT2    |    BT3    |    BT4    |   BT CLR  |          |           |           |           |           |           |
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR             &none       &none       &none       &none       &none
// |           |           |           |           |           |          |           |           |           |           |           |
       &none       &none       &none       &none       &none                  &none       &none       &none       &none       &none
//                         |           |           |           |          |           |           |||||||||||||
                               &none       &none       &none                  &none       &none       &trans
// ------------------------------------------------------------------------------------------------------------------------------------
            >;
        };
    };
};
